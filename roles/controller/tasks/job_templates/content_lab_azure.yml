---
- name: Content Lab - Azure - Create Resource Group
  ansible.controller.job_template:
    name: Content Lab - Azure - Create Resource Group
    inventory: "{{ inventories.localhost.name }}"
    playbook: playbook_create_resource_group.yml
    project: "{{ projects.azure_lab_roles.name }}"
    extra_vars:
      resource_group: "{{ azure_resource_group }}"
      region: "{{ azure_region }}"
    credentials:
      - "{{ credentials.azure_service_principal.name }}"
  when:
    - (seed_lab_content | bool)
    - credentials.azure_service_principal.name is defined
    - projects.azure_lab_roles.name is defined
    - inventories.localhost.name is defined
  tags:
    - templates

- name: Content Lab - Azure - Create VNET
  ansible.controller.job_template:
    name: "{{ job_templates.vnet.name }}"
    inventory: "{{ inventories.localhost.name }}"
    playbook: playbook_create_vnet.yml
    project: "{{ projects.azure_lab_roles.name }}"
    extra_vars:
      resource_group: "{{ azure_resource_group }}"
      region: "{{ azure_region }}"
      route_table_name: "{{ job_templates.vnet.route_table_name }}"
      vnet_name: "{{ job_templates.vnet.vnet_name }}"
      vnet_cidr: "{{ job_templates.vnet.vnet_cidr }}"
      subnet_name: "{{ job_templates.vnet.subnet_name }}"
      subnet_cidr: "{{ job_templates.vnet.subnet_cidr }}"
    credentials:
      - "{{ credentials.azure_service_principal.name }}"
  when:
    - (seed_lab_content | bool)
    - credentials.azure_service_principal.name is defined
    - projects.azure_lab_roles.name is defined
    - inventories.localhost.name is defined
  tags:
    - templates

- name: Content Lab - Azure - Create RHEL VM
  ansible.controller.job_template:
    name: "{{ job_templates.create_rhel_vm.name }}"
    inventory: "{{ inventories.localhost.name }}"
    playbook: playbook_create_vm.yml
    project: "{{ projects.azure_lab_roles.name }}"
    extra_vars:
      resource_group: "{{ azure_resource_group }}"
      region: "{{ azure_region }}"
      os_type: Linux
      vm_name: "{% raw %}create-rhel-test-{{ lookup('community.general.random_string', length=4, special=false) }}{% endraw %}"
      vm_blueprint: rhel9
      nic_name: create-rhel-test-nic
      network_sec_group_name: create-rhel-test-sg
      public_ip_name: create-rhel-test-public-ip
      vnet_name: "{{ job_templates.vnet.vnet_name }}"
      subnet_name: "{{ job_templates.vnet.subnet_name }}"
      create_public_ip: true
      admin_user: azureuser
      admin_password: ansible12345!
      ssh_public_keys:
        - path: "{% raw %}/home/{{ admin_user }}/.ssh/authorized_keys{% endraw %}"
          key_data: "{% raw %}{{ lookup('file', '/home/runner/.ssh/id_rsa_azure_demo.pub') }}{% endraw %}" # Can be populated through a custom credential or variable
    ask_variables_on_launch: true
    credentials:
      - "{{ credentials.azure_service_principal.name }}"
  when:
    - (seed_lab_content | bool)
    - credentials.azure_service_principal.name is defined
    - projects.azure_lab_roles.name is defined
    - inventories.localhost.name is defined
  register: create_rhel_vm_template
  tags:
    - templates

- name: Content Lab - Azure - Delete RHEL VM
  ansible.controller.job_template:
    name: "{{ job_templates.delete_rhel_vm.name }}"
    inventory: "{{ inventories.localhost.name }}"
    playbook: playbook_delete_vm.yml
    project: "{{ projects.azure_lab_roles.name }}"
    extra_vars:
      resource_group: "{{ azure_resource_group }}"
      vm_name: rhel9-test
      nic_name: "{% raw %}{{ vm_name }}-nic{% endraw %}"
      network_sec_group_name: "{% raw %}{{ vm_name }}-sg{% endraw %}"
      public_ip_name: "{% raw %}{{ vm_name }}-public-ip{% endraw %}"
    credentials:
      - "{{ credentials.azure_service_principal.name }}"
  when:
    - (seed_lab_content | bool)
    - credentials.azure_service_principal.name is defined
    - projects.azure_lab_roles.name is defined
    - inventories.localhost.name is defined
  register: delete_rhel_vm_template
  tags:
    - templates

- name: Content Lab - Azure - Create Windows Server VM
  ansible.controller.job_template:
    name: Content Lab - Azure - Create Windows Server VM
    inventory: "{{ inventories.localhost.name }}"
    playbook: playbook_create_vm.yml
    project: "{{ projects.azure_lab_roles.name }}"
    extra_vars:
      resource_group: "{{ azure_resource_group }}"
      region: "{{ azure_region }}"
      os_type: Windows
      vm_name: "{% raw %}create-win-test-{{ lookup('community.general.random_string', length=4, special=false) }}{% endraw %}"
      nic_name: create-win-test-nic
      network_sec_group_name: create-win-test-sg
      public_ip_name: create-win-test-public-ip
      vnet_name: "{{ job_templates.vnet.vnet_name }}"
      subnet_name: "{{ job_templates.vnet.subnet_name }}"
      create_public_ip: true
      admin_user: azureuser
      admin_password: ansible12345!
    ask_variables_on_launch: true
    credentials:
      - "{{ credentials.azure_service_principal.name }}"
  when:
    - (seed_lab_content | bool)
    - credentials.azure_service_principal.name is defined
    - projects.azure_lab_roles.name is defined
    - inventories.localhost.name is defined
  register: create_windows_vm_template
  tags:
    - templates

- name: Content Lab - Azure - Delete Windows VM
  ansible.controller.job_template:
    name: Content Lab - Azure - Delete Windows VM
    inventory: "{{ inventories.localhost.name }}"
    playbook: playbook_delete_vm.yml
    project: "{{ projects.azure_lab_roles.name }}"
    extra_vars:
      resource_group: "{{ azure_resource_group }}"
      vm_name: win2022-test
      nic_name: "{% raw %}{{ vm_name }}-nic{% endraw %}"
      network_sec_group_name: "{% raw %}{{ vm_name }}-sg{% endraw %}"
      public_ip_name: "{% raw %}{{ vm_name }}-public-ip{% endraw %}"
    credentials:
      - "{{ credentials.azure_service_principal.name }}"
  when:
    - (seed_lab_content | bool)
    - credentials.azure_service_principal.name is defined
    - projects.azure_lab_roles.name is defined
    - inventories.localhost.name is defined
  register: delete_windows_vm_template
  tags:
    - templates

- name: Content Lab - Azure - Delete Resource Group
  ansible.controller.job_template:
    name: Content Lab - Azure - Delete Resource Group
    inventory: "{{ inventories.localhost.name }}"
    playbook: playbook_delete_resource_group.yml
    project: "{{ projects.azure_lab_roles.name }}"
    extra_vars:
      resource_group: "{{ azure_resource_group }}"
      region: "{{ azure_region }}"
    credentials:
      - "{{ credentials.azure_service_principal.name }}"
  when:
    - (seed_lab_content | bool)
    - credentials.azure_service_principal.name is defined
    - projects.azure_lab_roles.name is defined
    - inventories.localhost.name is defined
  register: delete_resource_group_template
  tags:
    - templates

- name: Content Lab - Azure - Create Network Peering Demo
  ansible.controller.job_template:
    name: Content Lab - Azure - Create Network Peering Demo
    inventory: "{{ inventories.localhost.name }}"
    playbook: playbook_create_transit_network.yml
    project: "{{ projects.azure_lab_roles.name }}"
    extra_vars:
      resource_group: "{{ azure_resource_group }}"
      region: "{{ azure_region }}"
      priv_network_hosts_pattern: 172.16.*
      priv_network_ssh_user: azureuser
      ansible_ssh_private_key_file_local_path: /home/runner/.ssh/id_rsa_azure_demo # Must exist locally or be mapped in an EE
      ansible_ssh_private_key_file_dest_path: /home/runner/.ssh/id_rsa_azure_demo
    ask_variables_on_launch: true
    credentials:
      - "{{ credentials.azure_service_principal.name }}"
  when:
    - (seed_lab_content | bool)
    - credentials.azure_service_principal.name is defined
    - projects.azure_lab_roles.name is defined
    - inventories.localhost.name is defined
  register: create_network_peering_demo_template
  tags:
    - templates

- name: Content Lab - Azure - Delete Network Peering Demo
  ansible.controller.job_template:
    name: Content Lab - Azure - Delete Network Peering Demo
    project: "{{ projects.azure_lab_roles.name }}"
    playbook: playbook_delete_transit_network.yml
    inventory: "{{ inventories.localhost.name }}"
    extra_vars:
      resource_group: "{{ azure_resource_group }}"
      region: "{{ azure_region }}"
    ask_variables_on_launch: true
    credentials:
      - "{{ credentials.azure_service_principal.name }}"
  when:
    - (seed_lab_content | bool)
    - credentials.azure_service_principal.name is defined
    - projects.azure_lab_roles.name is defined
    - inventories.localhost.name is defined
  register: delete_network_peering_demo_template
  tags:
    - templates

- name: Content Lab - Azure - Run DNF Update
  ansible.controller.job_template:
    name: "{{ job_templates.dnf_update.name }}"
    job_type: run
    project: "{{ projects.azure_lab_roles.name }}"
    playbook: playbook_update_rhel_vms.yml
    inventory: "{{ inventories.azure.name }}"
    limit: rhel
    credentials:
      - "{{ credentials.ssh.name }}"
    become_enabled: true
    job_slice_count: 5
    state: present
  when:
    - (seed_lab_content | bool)
    - credentials.ssh.name is defined
    - projects.azure_lab_roles.name is defined
    - inventories.azure.name is defined
  register: rhel_vm_update_template
  tags:
    - templates

- name: Content Lab - Azure - Install Arc Agent
  ansible.controller.job_template:
    name: "{{ job_templates.install_arc_agent.name }}"
    inventory: "{{ inventories.azure.name }}"
    playbook: playbook_install_arc_agent.yml
    project: "{{ projects.azure_lab_roles.name }}"
    extra_vars:
      resource_group: "{{ azure_resource_group }}"
      region: "{{ azure_region }}"
      tenant_id: "{% raw %}{{ lookup('env', 'AZURE_TENANT') }}{% endraw %}"
      subscription_id: "{% raw %}{{ lookup('env', 'AZURE_SUBSCRIPTION_ID') }}{% endraw %}"
      service_principal_id: "{% raw %}{{ lookup('env', 'AZURE_CLIENT_ID') }}{% endraw %}"
      service_principal_secret: "{% raw %}{{ lookup('env', 'AZURE_SECRET') }}{% endraw %}"
    credentials:
      - "{{ credentials.ssh.name }}"
      - "{{ credentials.azure_service_principal.name }}"
    limit: rhel
    become_enabled: true
    ask_inventory_on_launch: true
    ask_limit_on_launch: true
  when:
    - (seed_lab_content | bool)
    - job_templates.install_arc_agent.name is defined
    - credentials.azure_service_principal.name is defined
    - credentials.ssh.name is defined
    - projects.azure_lab_roles.name is defined
    - inventories.azure.name is defined
  register: install_arc_agent_template
  tags:
    - templates

- name: Content Lab - Azure - Enable Arc Extensions
  ansible.controller.job_template:
    name: Content Lab - Azure - Enable Arc Extensions
    inventory: "{{ inventories.azure.name }}"
    playbook: playbook_enable_arc_extension.yml
    project: "{{ projects.azure_lab_roles.name }}"
    extra_vars:
      resource_group: "{{ azure_resource_group }}"
      region: "{{ azure_region }}"
      arc_hosts: "{% raw %}{{ hostvars.values() | selectattr('group_names','contains', 'arc') | map(attribute='inventory_hostname') | list }}{% endraw %}"
      extension: azure_monitor_agent # this name is from the extension variable mapping in the content lab collection
    credentials:
      - "{{ credentials.azure_service_principal.name }}"
    ask_variables_on_launch: true
  when:
    - (seed_lab_content | bool)
    - credentials.azure_service_principal.name is defined
    - projects.azure_lab_roles.name is defined
    - inventories.azure.name is defined
  register: enable_arc_extensions_template
  tags:
    - templates

- name: Content Lab - Azure - Disable Arc Extensions
  ansible.controller.job_template:
    name: Content Lab - Azure - Disable Arc Extensions
    inventory: "{{ inventories.azure.name }}"
    playbook: playbook_disable_arc_extension.yml
    project: "{{ projects.azure_lab_roles.name }}"
    extra_vars:
      resource_group_name: "{{ azure_resource_group }}"
      region: "{{ azure_region }}"
      arc_hosts: "{% raw %}{{ hostvars.values() | selectattr('group_names','contains', 'arc') | map(attribute='inventory_hostname') | list }}{% endraw %}"
      extension: azure_monitor_agent # this name is from the extension variable mapping in the content lab collection
    credentials:
      - "{{ credentials.azure_service_principal.name }}"
    ask_variables_on_launch: true
  when:
    - (seed_lab_content | bool)
    - credentials.azure_service_principal.name is defined
    - projects.azure_lab_roles.name is defined
    - inventories.azure.name is defined
  register: disable_arc_extensions_template
  tags:
    - templates

- name: Content Lab - Azure - Replace Log Analytics with Azure Monitor
  ansible.controller.job_template:
    name: "{{ job_templates.replace_log_analytics_with_azure_monitor.name }}"
    inventory: "{{ inventories.azure.name }}"
    playbook: playbook_replace_log_analytics_with_arc_linux.yml
    project: "{{ projects.azure_lab_roles.name }}"
    extra_vars:
      region: "{{ azure_region }}"
      resource_group: "{{ azure_resource_group }}"
      linux_hosts: "{% raw %}{{ hostvars.values() | selectattr('group_names','contains', 'arc') | map(attribute='inventory_hostname') | list }}{% endraw %}"
    credentials:
      - "{{ credentials.azure_service_principal.name }}"
  when:
    - (seed_lab_content | bool)
    - job_templates.replace_log_analytics_with_azure_monitor.name is defined
    - credentials.azure_service_principal.name is defined
    - projects.azure_lab_roles.name is defined
    - inventories.azure.name is defined
  register: replace_log_analytics_with_azure_monitor_template
  tags:
    - templates

- name: Content Lab - Azure - Create Log Analytics Workspace
  ansible.controller.job_template:
    name: "{{ job_templates.create_log_analytics_ws.name }}"
    inventory: "{{ inventories.localhost.name }}"
    playbook: playbook_create_log_analytics_workspace.yml
    project: "{{ projects.azure_lab_roles.name }}"
    credentials:
      - "{{ credentials.ssh.name }}"
    extra_vars:
      resource_group: "{{ azure_resource_group }}"
      workspace_name: "{{ job_templates.create_log_analytics_ws.ws_name }}"
    limit: rhel
  when:
    - (seed_lab_content | bool)
    - job_templates.create_log_analytics_ws.name is defined
    - job_templates.create_log_analytics_ws.ws_name is defined
    - credentials.ssh.name is defined
    - projects.azure_lab_roles.name is defined
    - inventories.localhost.name is defined
  register: create_log_analytics_workspace_template
  tags:
    - templates

- name: Content Lab - Azure - Install Log Analytics Agent
  ansible.controller.job_template:
    name: "{{ job_templates.install_log_analytics.name }}"
    inventory: "{{ inventories.azure.name }}"
    playbook: playbook_install_log_analytics_agent.yml
    project: "{{ projects.azure_lab_roles.name }}"
    credentials:
      - "{{ credentials.ssh.name }}"
    extra_vars:
      resource_group: "{{ azure_resource_group }}"
      workspace_name: "{{ job_templates.create_log_analytics_ws.ws_name }}"
    become_enabled: true
    limit: rhel
    ask_inventory_on_launch: true
    ask_limit_on_launch: true
  when:
    - (seed_lab_content | bool)
    - job_templates.install_log_analytics.name is defined
    - job_templates.create_log_analytics_ws.ws_name is defined
    - credentials.ssh.name is defined
    - projects.azure_lab_roles.name is defined
    - inventories.azure.name is defined
  register: install_log_analytics_agent_template
  tags:
    - templates

- name: Content Lab - Azure - Uninstall Log Analytics Agent
  ansible.controller.job_template:
    name: "{{ job_templates.uninstall_log_analytics.name }}"
    inventory: "{{ inventories.azure.name }}"
    playbook: playbook_uninstall_log_analytics_agent.yml
    project: "{{ projects.azure_lab_roles.name }}"
    credentials:
      - "{{ credentials.ssh.name }}"
    become_enabled: true
    ask_inventory_on_launch: true
    ask_limit_on_launch: true
  when:
    - (seed_lab_content | bool)
    - job_templates.uninstall_log_analytics.name is defined
    - credentials.ssh.name is defined
    - projects.azure_lab_roles.name is defined
    - inventories.azure.name is defined
  register: uninstall_log_analytics_agent_template
  tags:
    - templates

- name: Content Lab - Run Ephemeral Workload Test
  ansible.controller.job_template:
    name: Content Lab - Azure Demos - Ephemeral Workload Test
    job_type: run
    project: "{{ projects.azure_demo_project.name }}"
    playbook: project/emphemeral_workload_test.yml
    inventory: "{{ inventories.localhost.name }}"
    credentials:
      - "{{ credentials.azure_service_principal.name }}"
      - "{{ credentials.controller.name }}"
      - "{{ credentials.ssh.name }}"
    become_enabled: true
    job_slice_count: 1
    state: present
  when:
    - (seed_lab_content | bool)
    - credentials.azure_service_principal.name is defined
    - credentials.ssh.name is defined
    - credentials.controller.name is defined
    - projects.azure_demo_project.name is defined
    - inventories.localhost.name is defined
  register: ephemeral_workload_template
  tags:
    - templates
